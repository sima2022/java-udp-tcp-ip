/*
修飾子一覧
abstract	抽象クラス・メソッドを定義。実装はサブクラスに任せる。
static          クラスに直接属し、インスタンス不要でアクセス可能。
transient	シリアライズ時にフィールドを無視する。
native          ネイティブコードで実装されるメソッド。
final           クラスの継承、メソッドのオーバーライド、またはフィールドの変更を禁止。
synchronized	スレッドセーフなメソッドやブロックを定義。
volatile	スレッド間でのフィールドの一貫性を保証。
strictfp	浮動小数点計算の精度を保証。
* Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 TCP start Thread
*/
package com.mycompany.lan_test;

import static com.mycompany.lan_test.LAN_ini.connect;
import java.util.List;  // これを追加
import java.util.ArrayList;

import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import java.io.*;//lan
import java.net.*;//lan
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.*;
/**
 *
 * @author snb70
 */
//
public class New_lanJFrame extends javax.swing.JFrame {

    /**
     * Creates new form New_lanJFrame
     */
    //public JLabel jLabel5;
   // グローバルにインスタンスを保持
    public static New_lanJFrame instance;  // 静的なインスタンス
    private static final New_lanJFrame INSTANCE = new New_lanJFrame();
    public  LAN_connection p;
    //java側サーバー時
    public  ServerSocket serverSocket;
    public  Socket clientSocket;
    //java側クライアント時
    public  Socket socket;
    public  PrintWriter writer;
    //java側UDP時
    public DatagramSocket udp_socket;
    public DatagramPacket udp_receivePacket;
    public DatagramPacket udp_sendPacket;
    public DatagramSocket udp_receiveSocket;//2025/04/22
    public New_lanJFrame() {
        // jLabel5はデザイン時に作成されている
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        pack();
        //追加
        initComponents();            // GUIコンポーネントの初期化
        setLocationRelativeTo(null); // 画面の中央に配置
        instance = this;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TCPRadioButton_c = new javax.swing.JRadioButton();
        TCPRadioButton_s = new javax.swing.JRadioButton();
        UDPRadioButton = new javax.swing.JRadioButton();
        TCPRadioButton = new javax.swing.JRadioButton();
        jButton2 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Ethernet connections");

        jButton4.setText("Send");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Receive");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTextField1.setText("Send test ");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jRadioButton1.setText("STM32F103+W5500");
        jRadioButton1.setEnabled(false);

        jRadioButton2.setText("ESP32WROOM wifi");
        jRadioButton2.setEnabled(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("QH02H+QJ71-100");
        jRadioButton3.setEnabled(false);

        jRadioButton4.setText("KV5000");
        jRadioButton4.setEnabled(false);
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jLabel7.setText("接続先");
        jLabel7.setEnabled(false);

        jButton3.setText("接続先File Read");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setText("ファイヤーウォール確認");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 255, 0));
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setText("STM32F103+w5500に接続から受信pc client");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Get the local network IP address(PC側)"));
        jPanel2.setFont(new java.awt.Font("ＭＳ Ｐゴシック", 0, 12)); // NOI18N

        jLabel10.setText("Wifi IPまだ出来ない。");

        jLabel1.setText("パソコン側 IP address ");

        jButton1.setText("Get PC IP Address");
        jButton1.setActionCommand("Bconnection");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Remote Host(接続先)"));
        jPanel3.setFont(new java.awt.Font("ＭＳ Ｐゴシック", 0, 12)); // NOI18N

        jLabel3.setText("IP address");

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField2");

        jButton8.setText("jTextField読み込み確認");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel4.setText("Port");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8)
                    .addComponent(jLabel4))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("UDP/TCP Configuration"));

        TCPRadioButton_c.setText("TCP　client");
        TCPRadioButton_c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TCPRadioButton_cActionPerformed(evt);
            }
        });

        TCPRadioButton_s.setText("TCP 　server");
        TCPRadioButton_s.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TCPRadioButton_sActionPerformed(evt);
            }
        });

        UDPRadioButton.setText("UDP");
        UDPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UDPRadioButtonActionPerformed(evt);
            }
        });

        TCPRadioButton.setText("TCP");
        TCPRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TCPRadioButtonActionPerformed(evt);
            }
        });

        jButton2.setText("mode確認Test");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(UDPRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TCPRadioButton_s, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TCPRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TCPRadioButton_c, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(TCPRadioButton)
                    .addComponent(UDPRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TCPRadioButton_s)
                    .addComponent(TCPRadioButton_c))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton9.setText("connection");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("disconnect");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton10)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jRadioButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5)
                            .addComponent(jRadioButton3))
                        .addComponent(jRadioButton2)
                        .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9)
                            .addComponent(jButton10))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(8, 8, 8)
                .addComponent(jLabel6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton5))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static New_lanJFrame getInstance() {
        return INSTANCE;
    }
    // getter/setterメソッドの例
    //UDPボタン
    public boolean getUDP_Button() {
        return UDPRadioButton.isSelected();
    }
    //TCPボタン
    public boolean getTCP_Button() {
        return TCPRadioButton.isSelected();
    }
    //TCPサーバーボタン
    public boolean getTCP_S_Button() {
        return TCPRadioButton_s.isSelected();
    }
    //TCPクライアント
    public boolean getTCP_C_Button() {
        return TCPRadioButton_c.isSelected();
    }
    //IPアドレス
    public String getIP_text() {
        return jTextField2.getText();
    }
    //Port No
    public String getPort_text() {
        return jTextField3.getText();
    }
    //受信jTextArea1へ書き込み
    // 引数として渡された文字列を jTextArea1 に書き込む
    public void update_receive_Area(String str) {
        jTextArea1.append(str + "\n");  // jTextArea1 に追記
        //jTextArea1.revalidate();           // 再レイアウト
        //jTextArea1.repaint();              // 再描画
        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());//行スクロール
    }    



    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
// jTextField1 のテキストを別のクラスに返すメソッド
    public String getTextFieldTextxx() {
        return jTextField1.getText();  // jTextField1 のテキストを返す
    }
//送信
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "送信するつもり?", "送信", JOptionPane.INFORMATION_MESSAGE);
//        LAN_Send p = new LAN_Send();
//        p.w5500_UDP_Send();
        //p.w5500_TCP_Send();
        //LAN_Receive pp = new LAN_Receive();
        //p.w5500_UDP_Send();
        //p.w5500_TCP_Receive();
        //p.TCP_client_sendOnly();
            if (getUDP_Button()) {
                JOptionPane.showMessageDialog(null, "UDP 送信", "選択結果", JOptionPane.INFORMATION_MESSAGE);
                LAN_Send p = new LAN_Send();
                p.w5500_UDP_Send();
                //UDP_mode();
                //UDP_receiveAndSend();
            } else if (getTCP_Button()) {
                if(getTCP_S_Button()){
                    JOptionPane.showMessageDialog(null, "TCP サーバー　送信", "選択結果", JOptionPane.INFORMATION_MESSAGE);
                    LAN_Send p = new LAN_Send();
                    p.w5500_TCP_Send();
                    //TCP_server();
                    //TCP_server_cutting_corners();//
                    //TCP_server_receiveAndSend();
                }
                if(getTCP_C_Button()){
                    JOptionPane.showMessageDialog(null, "TCP クライアント　送信", "選択結果", JOptionPane.INFORMATION_MESSAGE);
                    LAN_Send p = new LAN_Send();
                    p.w5500_TCP_Send();
                    //TCP_client_every();//連続送信
                    //TCP_client_receiveOnly();
                    //TCP_client_receiveAndSend();
                }
        
            }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //JOptionPane.showMessageDialog(null, "受信を表示するつもり?", "受信？", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // ローカルホスト名とIPアドレスを取得
        try {
            InetAddress addr = InetAddress.getLocalHost();
            InetAddress addr2 = InetAddress.getLocalHost();
            if (addr.equals(addr2)) System.out.println("addr addr2");
                System.out.println("Local Host Name: " + addr.getHostName());
                System.out.println("IP Address     : " + addr.getHostAddress());
                jLabel1.setText(addr.getHostAddress().toString());
        } catch (UnknownHostException e) {
            System.out.print("Could not obtain IP address ");
            e.printStackTrace();
        }
            try {
            Enumeration<NetworkInterface> interfaces = NetworkInterface.getNetworkInterfaces();

            while (interfaces.hasMoreElements()) {
                NetworkInterface networkInterface = interfaces.nextElement();

                // Wi-Fiインターフェースを探す
                if (networkInterface.getDisplayName() != null &&
                    networkInterface.getDisplayName().toLowerCase().contains("wi-fi")) {

                    System.out.println("Wi-Fi if: " + networkInterface.getDisplayName());

                    Enumeration<InetAddress> inetAddresses = networkInterface.getInetAddresses();
                    while (inetAddresses.hasMoreElements()) {
                        InetAddress inetAddress = inetAddresses.nextElement();

                        // IPv4 アドレスのみを出力
                        if (inetAddress instanceof Inet4Address) {
                            System.out.println("Wi-Fi IPv4: " + inetAddress.getHostAddress());
                        }
                    }
                }
            }
        } catch (SocketException e) {
            e.printStackTrace();
        }    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed
//ファイルDlg
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        // useJFileChooserのインスタンスを作成
        useJFileChooser fileChooser = new useJFileChooser();

        // ファイル選択を呼び出す
        String filePath = fileChooser.selectFile();
        if (filePath != null) {
            System.out.println("Selected file path: " + filePath);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        try {
            // コマンドでWindows 11のファイアウォール設定を開く
            String command = "control.exe firewall.cpl";
            Process process = Runtime.getRuntime().exec(command);
            
            // コマンドが正常に実行された場合
            process.waitFor();
            System.out.println("firewall");
        } catch (IOException | InterruptedException e) {
            e.printStackTrace();
        }   
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (UDPRadioButton.isSelected()) {
            JOptionPane.showMessageDialog(null, "UDP", "選択結果", JOptionPane.INFORMATION_MESSAGE);
        } else if (TCPRadioButton.isSelected()) {
            if(TCPRadioButton_s.isSelected()){
                JOptionPane.showMessageDialog(null, "TCP サーバー"+ "", "選択結果", JOptionPane.INFORMATION_MESSAGE);
            }
            if(TCPRadioButton_c.isSelected()){
                JOptionPane.showMessageDialog(null, "TCP クライアント"+ "", "選択結果", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
            JOptionPane.showMessageDialog(null, "接続", "選択結果", JOptionPane.INFORMATION_MESSAGE);
            String SERVER_IP = "192.168.11.4"; // 接続先のIPアドレス
            int SERVER_PORT = 5353;           // 接続先のポート番号
               try (Socket socket = new Socket(SERVER_IP, SERVER_PORT)) {
                    System.out.println("Connected to server!");

                    // データ送信の例
                //    OutputStream output = socket.getOutputStream();
                //    output.write("Hello, Server!".getBytes());
                    /*
                    // データ受信の例
                    InputStream input = socket.getInputStream();
                    byte[] buffer = new byte[1024];
                    int bytesRead = input.read(buffer);
                    String response = new String(buffer, 0, bytesRead);
                    System.out.println("Received from server: " + response);
                    */
                    InputStream input = socket.getInputStream();
                    byte[] buffer = new byte[1024];
                    int bytesRead;
                    while ((bytesRead = input.read(buffer)) != -1) {
                            String response = new String(buffer, 0, bytesRead);
                            System.out.println("Received from server: " + response);
                            jTextArea1.append(response + "\n");
                    }
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void TCPRadioButton_cActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TCPRadioButton_cActionPerformed
        //TCP クライアント
        jTextField2.setEnabled(true);
        jButton10.setEnabled(true);
    }//GEN-LAST:event_TCPRadioButton_cActionPerformed

    private void UDPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UDPRadioButtonActionPerformed
        // TODO add your handling code here: UDP
        //グレーアウト
        TCPRadioButton_s.setEnabled(false);//setVisible(false); // TCPボタンを非表示からグレーアウトへ
        TCPRadioButton_c.setEnabled(false);//setVisible(false); // TCPボタンを非表示
        jTextField2.setEnabled(true);
        jButton10.setEnabled(true);
    }//GEN-LAST:event_UDPRadioButtonActionPerformed

    private void TCPRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TCPRadioButtonActionPerformed
        // TODO add your handling code here://TCP
        //グレーアウトを戻す。
//       if (TCPRadioButton_s.isSelected()) {
//            //JOptionPane.showMessageDialog(null,"TextField2 Numbers: ", "読み込み結果", JOptionPane.INFORMATION_MESSAGE);
//            jTextField2.setEnabled(false);
//        }else{
//            jTextField2.setEnabled(true);
//        }
       TCPRadioButton_s.setEnabled(true);
       TCPRadioButton_c.setEnabled(true);
    }//GEN-LAST:event_TCPRadioButtonActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        //jTextField 読み込み test
        String text2 = jTextField2.getText();
        String text3 = jTextField3.getText();
        // ダイアログで結果を表示　null=画面の中央
        //JOptionPane.showMessageDialog(null,
        //jFrameのセンターで表示。
        JOptionPane.showMessageDialog(this,
            "TextField2 Numbers: " + text2 + "\nTextField3 Numbers: " + text3, "読み込み結果", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        //接続
        p = new LAN_connection();//LAN_connection p = new LAN_connection();
        p.connect();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void TCPRadioButton_sActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TCPRadioButton_sActionPerformed
        // TODO add your handling code here:
        //TCP サーバー
        //ys 25/04/20        jTextField2.setEnabled(false);
        //        jButton10.setEnabled(false);
    }//GEN-LAST:event_TCPRadioButton_sActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        //close
        JOptionPane.showMessageDialog(this,
            "disconnect", " ", JOptionPane.INFORMATION_MESSAGE);
        p.TCP_server_stop();
        p.TCP_client_stop();
        //port 送信用、受信用の為追加。
        p.UDP_stop();
        p.UDP_stop_receive();
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       /* Set the Nimbus look and feel */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(New_lanJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
                
        //System.out.println("UDP start Thread");
//        System.out.println("TCP/UDP start Thread");
//        LAN_Receive p = new LAN_Receive();
        //LAN_Send p = new LAN_Send();
//        Thread udpThread = new Thread(() -> p.w5500_UDP_Receive());
        //Thread udpThread = new Thread(() -> p.w5500_TCP_Receive());
        //Thread udpThread = new Thread(() -> p.w5500_TCP_Send());
        //Thread udpThread = new Thread(() -> p.TestThread());
//        udpThread.start();


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new New_lanJFrame().setVisible(true);
                ButtonGroup group = new ButtonGroup();
                group.add(jRadioButton1);
                group.add(jRadioButton2);
                group.add(jRadioButton3);
                group.add(jRadioButton4);
                //ButtonGroup group2 = new ButtonGroup();
                group.add(TCPRadioButton_s);
                group.add(TCPRadioButton_c);
                // 起動時に「Option 2」を選択状態にする
                jRadioButton1.setSelected(true);
                ButtonGroup group1 = new ButtonGroup();
                group1.add(UDPRadioButton);
                group1.add(TCPRadioButton);
                TCPRadioButton_s.setSelected(true);
//                jButton10.setEnabled(false);
                //UDPRadioButton.setSelected(true);
                TCPRadioButton.setSelected(true);
                //jTextField2.setText("192.168.11.3"); // JTextFieldに初期値を設定
                jTextField2.setText("192.168.11.3"); // JTextFieldに初期値を設定
                jTextField3.setText("5353"); // JTextFieldに初期値を設定
//ys25/04/20                jTextField2.setEnabled(false);
                //jTextArea1.append(Gstr);
            }
        });    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JRadioButton TCPRadioButton;
    public static javax.swing.JRadioButton TCPRadioButton_c;
    public static javax.swing.JRadioButton TCPRadioButton_s;
    public static javax.swing.JRadioButton UDPRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    public static javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    public static javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private static javax.swing.JRadioButton jRadioButton1;
    private static javax.swing.JRadioButton jRadioButton2;
    private static javax.swing.JRadioButton jRadioButton3;
    private static javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    public static javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
